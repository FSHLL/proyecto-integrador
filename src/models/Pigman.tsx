/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/models/pigman/model.glb -t 
*/

import * as THREE from 'three'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { getModelPath } from '@/helpers/path'

type GLTFResult = GLTF & {
  nodes: {
    Object_21: THREE.Mesh
    Object_22: THREE.Mesh
    Object_24: THREE.Mesh
    Object_26: THREE.Mesh
    Object_28: THREE.Mesh
    Object_30: THREE.Mesh
    Object_34: THREE.Mesh
    Object_36: THREE.Mesh
    Object_38: THREE.Mesh
    Object_40: THREE.Mesh
    Object_42: THREE.Mesh
    Object_46: THREE.Mesh
  }
  materials: {
    PigMan_Body: THREE.MeshStandardMaterial
    PigMan_ArmsLegs: THREE.MeshStandardMaterial
    PigMan_Armor: THREE.MeshStandardMaterial
    Pig_fur: THREE.MeshStandardMaterial
  }
}

export function Pigman(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF(getModelPath('pigman')) as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.Object_21.geometry} material={materials.PigMan_Body} />
      <mesh geometry={nodes.Object_22.geometry} material={materials.PigMan_ArmsLegs} />
      <mesh geometry={nodes.Object_24.geometry} material={materials.PigMan_Body} />
      <mesh geometry={nodes.Object_26.geometry} material={materials.PigMan_Body} />
      <mesh geometry={nodes.Object_28.geometry} material={materials.PigMan_Armor} />
      <mesh geometry={nodes.Object_30.geometry} material={materials.PigMan_Armor} />
      <mesh geometry={nodes.Object_34.geometry} material={materials.Pig_fur} />
      <mesh geometry={nodes.Object_36.geometry} material={materials.PigMan_Armor} />
      <mesh geometry={nodes.Object_38.geometry} material={materials.PigMan_Armor} />
      <mesh geometry={nodes.Object_40.geometry} material={materials.PigMan_Armor} />
      <mesh geometry={nodes.Object_42.geometry} material={materials.PigMan_Armor} />
      <mesh geometry={nodes.Object_46.geometry} material={materials.PigMan_Armor} />
    </group>
  )
}

useGLTF.preload(getModelPath('pigman'))
